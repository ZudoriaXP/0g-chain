FROM golang:1.20-bullseye AS chain-builder

# Set up dependencies
RUN apt-get update \
    && apt-get install -y git make gcc libgflags-dev libsnappy-dev zlib1g-dev libbz2-dev liblz4-dev libzstd-dev \
    && rm -rf /var/lib/apt/lists/*

# Set working directory for the build
WORKDIR /root
# default home directory is /root

# install rocksdb
ARG rocksdb_version=v8.10.0
ENV ROCKSDB_VERSION=$rocksdb_version

RUN git clone https://github.com/facebook/rocksdb.git \
    && cd rocksdb \
    && git checkout $ROCKSDB_VERSION \
    && make -j$(nproc) install-shared \
    && ldconfig

WORKDIR /root/0gchain
# Copy dependency files first to facilitate dependency caching
COPY ./go.mod ./
COPY ./go.sum ./

# Download dependencies
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    go version && go mod download

# Add source files
COPY . .

ARG 0gchain_database_backend=rocksdb
ENV 0GCHAIN_DATABASE_BACKEND=$0gchain_database_backend

# Mount go build and mod caches as container caches, persisted between builder invocations
RUN --mount=type=cache,target=/root/.cache/go-build \
    --mount=type=cache,target=/go/pkg/mod \
    make install COSMOS_BUILD_OPTIONS=$0GCHAIN_DATABASE_BACKEND


FROM ubuntu:22.04

RUN apt-get update \
    && apt-get install -y libsnappy1v5 libgflags2.2 zlib1g libbz2-1.0 curl jq \
    && rm -rf /var/lib/apt/lists/*

# copy rocksdb shared objects
COPY --from=chain-builder /usr/local/lib/ /usr/local/lib/
RUN ldconfig

# copy 0g-chain binary
COPY --from=chain-builder /go/bin/0gchaind /bin/0gchaind

CMD ["0gchaind"]
